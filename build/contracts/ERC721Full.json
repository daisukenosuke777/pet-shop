{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001d9238038062001d92833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b50509291906020018051640100000000811115620000a257600080fd5b82810190506020810184811115620000b957600080fd5b8151856001820283011164010000000082111715620000d757600080fd5b505092919050505081816200011e6301ffc9a77c01000000000000000000000000000000000000000000000000000000000262000211640100000000026401000000009004565b6200015b6380ac58cd7c01000000000000000000000000000000000000000000000000000000000262000211640100000000026401000000009004565b6200019863780e9d637c01000000000000000000000000000000000000000000000000000000000262000211640100000000026401000000009004565b8160099080519060200190620001b0929190620002cf565b5080600a9080519060200190620001c9929190620002cf565b5062000207635b5e139f7c01000000000000000000000000000000000000000000000000000000000262000211640100000000026401000000009004565b505050506200037e565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200026357600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031257805160ff191683800117855562000343565b8280016001018555821562000343579182015b828111156200034257825182559160200191906001019062000325565b5b50905062000352919062000356565b5090565b6200037b91905b80821115620003775760008160009055506001016200035d565b5090565b90565b611a04806200038e6000396000f3fe6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100eb57806306fdde031461015d578063081812fc146101ed578063095ea7b31461026857806318160ddd146102c357806323b872dd146102ee5780632f745c591461036957806342842e0e146103d85780634f6ccce7146104535780636352211e146104a257806370a082311461051d57806395d89b4114610582578063a22cb46514610612578063b88d4fde1461066f578063c87b56dd14610781578063e985e9c514610835575b600080fd5b3480156100f757600080fd5b506101436004803603602081101561010e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108be565b604051808215151515815260200191505060405180910390f35b34801561016957600080fd5b50610172610925565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b2578082015181840152602081019050610197565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f957600080fd5b506102266004803603602081101561021057600080fd5b81019080803590602001909291905050506109c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027457600080fd5b506102c16004803603604081101561028b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a18565b005b3480156102cf57600080fd5b506102d8610b5d565b6040518082815260200191505060405180910390f35b3480156102fa57600080fd5b506103676004803603606081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b6a565b005b34801561037557600080fd5b506103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b8f565b6040518082815260200191505060405180910390f35b3480156103e457600080fd5b50610451600480360360608110156103fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c06565b005b34801561045f57600080fd5b5061048c6004803603602081101561047657600080fd5b8101908080359060200190929190505050610c27565b6040518082815260200191505060405180910390f35b3480156104ae57600080fd5b506104db600480360360208110156104c557600080fd5b8101908080359060200190929190505050610c5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052957600080fd5b5061056c6004803603602081101561054057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cdd565b6040518082815260200191505060405180910390f35b34801561058e57600080fd5b50610597610d68565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105d75780820151818401526020810190506105bc565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561061e57600080fd5b5061066d6004803603604081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610e0a565b005b34801561067b57600080fd5b5061077f6004803603608081101561069257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106f957600080fd5b82018360208201111561070b57600080fd5b8035906020019184600183028401116401000000008311171561072d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f46565b005b34801561078d57600080fd5b506107ba600480360360208110156107a457600080fd5b8101908080359060200190929190505050610f6e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107fa5780820151818401526020810190506107df565b50505050905090810190601f1680156108275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084157600080fd5b506108a46004803603604081101561085857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611037565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109bd5780601f10610992576101008083540402835291602001916109bd565b820191906000526020600020905b8154815290600101906020018083116109a057829003601f168201915b5050505050905090565b60006109d2826110cb565b15156109dd57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a2382610c5f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a6057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610aa05750610a9f8133611037565b5b1515610aab57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610b74338261113d565b1515610b7f57600080fd5b610b8a8383836111d2565b505050565b6000610b9a83610cdd565b82101515610ba757600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610bf357fe5b9060005260206000200154905092915050565b610c228383836020604051908101604052806000815250610f46565b505050565b6000610c31610b5d565b82101515610c3e57600080fd5b600782815481101515610c4d57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cd457600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d1a57600080fd5b610d61600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206111f6565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e005780601f10610dd557610100808354040283529160200191610e00565b820191906000526020600020905b815481529060010190602001808311610de357829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e4557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610f51848484610b6a565b610f5d84848484611204565b1515610f6857600080fd5b50505050565b6060610f79826110cb565b1515610f8457600080fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561102b5780601f106110005761010080835404028352916020019161102b565b820191906000526020600020905b81548152906001019060200180831161100e57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061114983610c5f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111b857508373ffffffffffffffffffffffffffffffffffffffff166111a0846109c7565b73ffffffffffffffffffffffffffffffffffffffff16145b806111c957506111c88185611037565b5b91505092915050565b6111dd838383611427565b6111e783826115ee565b6111f18282611792565b505050565b600081600001549050919050565b60006112258473ffffffffffffffffffffffffffffffffffffffff16611859565b1515611234576001905061141f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561132b578082015181840152602081019050611310565b50505050905090810190601f1680156113585780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561137a57600080fd5b505af115801561138e573d6000803e3d6000fd5b505050506040513d60208110156113a457600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff1661144782610c5f565b73ffffffffffffffffffffffffffffffffffffffff1614151561146957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114a557600080fd5b6114ae8161186c565b6114f5600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061192c565b61153c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061194f565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006116466001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061196590919063ffffffff16565b90506000600660008481526020019081526020016000205490508181141515611739576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156116b757fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561171157fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361178b9190611987565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156119295760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6119446001826000015461196590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115151561197657600080fd5b600082840390508091505092915050565b8154818355818111156119ae578183600052602060002091820191016119ad91906119b3565b5b505050565b6119d591905b808211156119d15760008160009055506001016119b9565b5090565b9056fea165627a7a7230582026d935622c2893df538024219a1c68bddbe0e672c147dd937938094f3890e4440029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100eb57806306fdde031461015d578063081812fc146101ed578063095ea7b31461026857806318160ddd146102c357806323b872dd146102ee5780632f745c591461036957806342842e0e146103d85780634f6ccce7146104535780636352211e146104a257806370a082311461051d57806395d89b4114610582578063a22cb46514610612578063b88d4fde1461066f578063c87b56dd14610781578063e985e9c514610835575b600080fd5b3480156100f757600080fd5b506101436004803603602081101561010e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108be565b604051808215151515815260200191505060405180910390f35b34801561016957600080fd5b50610172610925565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b2578082015181840152602081019050610197565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f957600080fd5b506102266004803603602081101561021057600080fd5b81019080803590602001909291905050506109c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027457600080fd5b506102c16004803603604081101561028b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a18565b005b3480156102cf57600080fd5b506102d8610b5d565b6040518082815260200191505060405180910390f35b3480156102fa57600080fd5b506103676004803603606081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b6a565b005b34801561037557600080fd5b506103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b8f565b6040518082815260200191505060405180910390f35b3480156103e457600080fd5b50610451600480360360608110156103fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c06565b005b34801561045f57600080fd5b5061048c6004803603602081101561047657600080fd5b8101908080359060200190929190505050610c27565b6040518082815260200191505060405180910390f35b3480156104ae57600080fd5b506104db600480360360208110156104c557600080fd5b8101908080359060200190929190505050610c5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052957600080fd5b5061056c6004803603602081101561054057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cdd565b6040518082815260200191505060405180910390f35b34801561058e57600080fd5b50610597610d68565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105d75780820151818401526020810190506105bc565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561061e57600080fd5b5061066d6004803603604081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610e0a565b005b34801561067b57600080fd5b5061077f6004803603608081101561069257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106f957600080fd5b82018360208201111561070b57600080fd5b8035906020019184600183028401116401000000008311171561072d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f46565b005b34801561078d57600080fd5b506107ba600480360360208110156107a457600080fd5b8101908080359060200190929190505050610f6e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107fa5780820151818401526020810190506107df565b50505050905090810190601f1680156108275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084157600080fd5b506108a46004803603604081101561085857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611037565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109bd5780601f10610992576101008083540402835291602001916109bd565b820191906000526020600020905b8154815290600101906020018083116109a057829003601f168201915b5050505050905090565b60006109d2826110cb565b15156109dd57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a2382610c5f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a6057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610aa05750610a9f8133611037565b5b1515610aab57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610b74338261113d565b1515610b7f57600080fd5b610b8a8383836111d2565b505050565b6000610b9a83610cdd565b82101515610ba757600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610bf357fe5b9060005260206000200154905092915050565b610c228383836020604051908101604052806000815250610f46565b505050565b6000610c31610b5d565b82101515610c3e57600080fd5b600782815481101515610c4d57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cd457600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d1a57600080fd5b610d61600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206111f6565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e005780601f10610dd557610100808354040283529160200191610e00565b820191906000526020600020905b815481529060010190602001808311610de357829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e4557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610f51848484610b6a565b610f5d84848484611204565b1515610f6857600080fd5b50505050565b6060610f79826110cb565b1515610f8457600080fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561102b5780601f106110005761010080835404028352916020019161102b565b820191906000526020600020905b81548152906001019060200180831161100e57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061114983610c5f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111b857508373ffffffffffffffffffffffffffffffffffffffff166111a0846109c7565b73ffffffffffffffffffffffffffffffffffffffff16145b806111c957506111c88185611037565b5b91505092915050565b6111dd838383611427565b6111e783826115ee565b6111f18282611792565b505050565b600081600001549050919050565b60006112258473ffffffffffffffffffffffffffffffffffffffff16611859565b1515611234576001905061141f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561132b578082015181840152602081019050611310565b50505050905090810190601f1680156113585780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561137a57600080fd5b505af115801561138e573d6000803e3d6000fd5b505050506040513d60208110156113a457600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff1661144782610c5f565b73ffffffffffffffffffffffffffffffffffffffff1614151561146957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114a557600080fd5b6114ae8161186c565b6114f5600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061192c565b61153c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061194f565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006116466001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061196590919063ffffffff16565b90506000600660008481526020019081526020016000205490508181141515611739576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156116b757fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561171157fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361178b9190611987565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156119295760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6119446001826000015461196590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115151561197657600080fd5b600082840390508091505092915050565b8154818355818111156119ae578183600052602060002091820191016119ad91906119b3565b5b505050565b6119d591905b808211156119d15760008160009055506001016119b9565b5090565b9056fea165627a7a7230582026d935622c2893df538024219a1c68bddbe0e672c147dd937938094f3890e4440029",
  "sourceMap": "416:231:6:-;;;487:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;487:157:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;487:157:6;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;487:157:6;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;487:157:6;;;;;;564:4;570:6;665:40:3;246:10;684:20;;665:18;;;:40;;;:::i;:::-;1994::4;1235:10;2013:20;;1994:18;;;:40;;;:::i;:::-;1257:51:5;860:10;1276:31;;1257:18;;;:51;;;:::i;:::-;755:4:7;747:5;:12;;;;;;;;;;;;:::i;:::-;;780:6;770:7;:16;;;;;;;;;;;;:::i;:::-;;877:49;426:10;896:29;;877:18;;;:49;;;:::i;:::-;674:260;;487:157:6;;416:231;;1028:161:3;1119:10;1104:25;;:11;:25;;;;;1096:34;;;;;;;;1177:4;1141:20;:33;1162:11;1141:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1028:161;:::o;416:231:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "416:231:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:135:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;809:135:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;809:135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1044:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1044:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3844:154:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3844:154:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3844:154:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3252:299:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3252:299:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:96:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:96:5;;;;;;;;;;;;;;;;;;;;;;;5435:184:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5435:184:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5435:184:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:185:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1697:185:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1697:185:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6265:134:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6265:134:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6265:134:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2481:151:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2481:151:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2481:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:181:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2640:181:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2640:181:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2252:163:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2252:163:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:89:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1243:89:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1243:89:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4298:217:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4298:217:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4298:217:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7118:214;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7118:214:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7118:214:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7118:214:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7118:214:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7118:214:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7118:214:4;;;;;;;;;;;;;;;;;;1538:154:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1538:154:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1538:154:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1538:154:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4844:147:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4844:147:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4844:147:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:135:3;879:4;903:20;:33;924:11;903:33;;;;;;;;;;;;;;;;;;;;;;;;;;;896:40;;809:135;;;:::o;1044:85:7:-;1083:13;1116:5;1109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:85;:::o;3844:154:4:-;3903:7;3931:16;3939:7;3931;:16::i;:::-;3923:25;;;;;;;;3966:15;:24;3982:7;3966:24;;;;;;;;;;;;;;;;;;;;;3959:31;;3844:154;;;:::o;3252:299::-;3316:13;3332:16;3340:7;3332;:16::i;:::-;3316:32;;3373:5;3367:11;;:2;:11;;;;3359:20;;;;;;;;3412:5;3398:19;;:10;:19;;;:58;;;;3421:35;3438:5;3445:10;3421:16;:35::i;:::-;3398:58;3390:67;;;;;;;;3497:2;3470:15;:24;3486:7;3470:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3535:7;3531:2;3515:28;;3524:5;3515:28;;;;;;;;;;;;3252:299;;;:::o;2040:96:5:-;2084:7;2111:10;:17;;;;2104:24;;2040:96;:::o;5435:184:4:-;5526:39;5545:10;5557:7;5526:18;:39::i;:::-;5518:48;;;;;;;;5579:32;5593:4;5599:2;5603:7;5579:13;:32::i;:::-;5435:184;;;:::o;1697:185:5:-;1777:7;1813:16;1823:5;1813:9;:16::i;:::-;1805:5;:24;1797:33;;;;;;;;1848:12;:19;1861:5;1848:19;;;;;;;;;;;;;;;1868:5;1848:26;;;;;;;;;;;;;;;;;;1841:33;;1697:185;;;;:::o;6265:134:4:-;6352:39;6369:4;6375:2;6379:7;6352:39;;;;;;;;;;;;;:16;:39::i;:::-;6265:134;;;:::o;2481:151:5:-;2539:7;2575:13;:11;:13::i;:::-;2567:5;:21;2559:30;;;;;;;;2607:10;2618:5;2607:17;;;;;;;;;;;;;;;;;;2600:24;;2481:151;;;:::o;2640:181:4:-;2695:7;2715:13;2731:11;:20;2743:7;2731:20;;;;;;;;;;;;;;;;;;;;;2715:36;;2787:1;2770:19;;:5;:19;;;;2762:28;;;;;;;;2808:5;2801:12;;;2640:181;;;:::o;2252:163::-;2307:7;2352:1;2335:19;;:5;:19;;;;2327:28;;;;;;;;2373:34;:17;:24;2391:5;2373:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2366:41;;2252:163;;;:::o;1243:89:7:-;1284:13;1317:7;1310:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:89;:::o;4298:217:4:-;4384:10;4378:16;;:2;:16;;;;4370:25;;;;;;;;4443:8;4406:18;:30;4425:10;4406:30;;;;;;;;;;;;;;;:34;4437:2;4406:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4494:2;4467:40;;4482:10;4467:40;;;4498:8;4467:40;;;;;;;;;;;;;;;;;;;;;;4298:217;;:::o;7118:214::-;7225:31;7238:4;7244:2;7248:7;7225:12;:31::i;:::-;7275:48;7298:4;7304:2;7308:7;7317:5;7275:22;:48::i;:::-;7267:57;;;;;;;;7118:214;;;;:::o;1538:154:7:-;1596:13;1630:16;1638:7;1630;:16::i;:::-;1622:25;;;;;;;;1665:10;:19;1676:7;1665:19;;;;;;;;;;;1658:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:154;;;:::o;4844:147:4:-;4924:4;4948:18;:25;4967:5;4948:25;;;;;;;;;;;;;;;:35;4974:8;4948:35;;;;;;;;;;;;;;;;;;;;;;;;;4941:42;;4844:147;;;;:::o;7533:155::-;7590:4;7607:13;7623:11;:20;7635:7;7623:20;;;;;;;;;;;;;;;;;;;;;7607:36;;7678:1;7661:19;;:5;:19;;;;7654:26;;;7533:155;;;:::o;8057:249::-;8142:4;8159:13;8175:16;8183:7;8175;:16::i;:::-;8159:32;;8221:5;8210:16;;:7;:16;;;:51;;;;8254:7;8230:31;;:20;8242:7;8230:11;:20::i;:::-;:31;;;8210:51;:87;;;;8265:32;8282:5;8289:7;8265:16;:32::i;:::-;8210:87;8202:96;;;8057:249;;;;:::o;3016:245:5:-;3102:38;3122:4;3128:2;3132:7;3102:19;:38::i;:::-;3153:47;3186:4;3192:7;3153:32;:47::i;:::-;3213:40;3241:2;3245:7;3213:27;:40::i;:::-;3016:245;;;:::o;1079:114:2:-;1144:7;1171;:14;;;1164:21;;1079:114;;;:::o;10973:356:4:-;11095:4;11122:15;:2;:13;;;:15::i;:::-;11121:16;11117:60;;;11161:4;11154:11;;;;11117:60;11189:13;11221:2;11205:36;;;11242:10;11254:4;11260:7;11269:5;11205:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11205:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11205:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11205:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11205:70:4;;;;;;;;;;;;;;;;11189:86;;707:10;11304:16;;11294:26;;;:6;:26;;;;11286:35;;;10973:356;;;;;;;:::o;10060:374::-;10174:4;10154:24;;:16;10162:7;10154;:16::i;:::-;:24;;;10146:33;;;;;;;;10212:1;10198:16;;:2;:16;;;;10190:25;;;;;;;;10228:23;10243:7;10228:14;:23::i;:::-;10264:35;:17;:23;10282:4;10264:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10310:33;:17;:21;10328:2;10310:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10379:2;10356:11;:20;10368:7;10356:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10418:7;10414:2;10399:27;;10408:4;10399:27;;;;;;;;;;;;10060:374;;;:::o;6193:1148:5:-;6459:22;6484:32;6514:1;6484:12;:18;6497:4;6484:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6459:57;;6527:18;6548:17;:26;6566:7;6548:26;;;;;;;;;;;;6527:47;;6695:14;6681:10;:28;;6677:328;;;6726:19;6748:12;:18;6761:4;6748:18;;;;;;;;;;;;;;;6767:14;6748:34;;;;;;;;;;;;;;;;;;6726:56;;6832:11;6799:12;:18;6812:4;6799:18;;;;;;;;;;;;;;;6818:10;6799:30;;;;;;;;;;;;;;;;;:44;;;;6949:10;6916:17;:30;6934:11;6916:30;;;;;;;;;;;:43;;;;6677:328;;7094:12;:18;7107:4;7094:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6193:1148;;;;:::o;5017:186::-;5131:12;:16;5144:2;5131:16;;;;;;;;;;;;;;;:23;;;;5102:17;:26;5120:7;5102:26;;;;;;;;;;;:52;;;;5165:12;:16;5178:2;5165:16;;;;;;;;;;;;;;;5187:7;5165:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5165:30:5;;;;;;;;;;;;;;;;;;;;;;5017:186;;:::o;476:627:0:-;536:4;553:12;1060:7;1048:20;1040:28;;1094:1;1087:4;:8;1080:15;;;476:627;;;:::o;11496:175:4:-;11596:1;11560:38;;:15;:24;11576:7;11560:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11556:108;;;11650:1;11615:15;:24;11631:7;11615:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11556:108;11496:175;:::o;1300:110:2:-;1381:21;1400:1;1381:7;:14;;;:18;;:21;;;;:::i;:::-;1364:7;:14;;:38;;;;1300:110;:::o;1201:91::-;1283:1;1265:7;:14;;;:19;;;;;;;;;;;1201:91;:::o;1250:150:14:-;1308:7;1341:1;1336;:6;;1328:15;;;;;;;;1354:9;1370:1;1366;:5;1354:17;;1391:1;1384:8;;;1250:150;;;;:::o;416:231:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./ERC721.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\n\r\n/**\r\n * @title Full ERC721 Token\r\n * This implementation includes all the required and some optional functionality of the ERC721 standard\r\n * Moreover, it includes approve all functionality using operator terminology\r\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r\n */\r\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}",
  "sourcePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Full.sol",
  "ast": {
    "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1368
      ]
    },
    "id": 1369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1346,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1347,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1010,
        "src": "27:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1348,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1345,
        "src": "51:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1349,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1496,
        "src": "85:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1350,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1009,
              "src": "439:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1009",
                "typeString": "contract ERC721"
              }
            },
            "id": 1351,
            "nodeType": "InheritanceSpecifier",
            "src": "439:6:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1352,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1344,
              "src": "447:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1344",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1353,
            "nodeType": "InheritanceSpecifier",
            "src": "447:16:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1354,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1495,
              "src": "465:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1495",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1355,
            "nodeType": "InheritanceSpecifier",
            "src": "465:14:6"
          }
        ],
        "contractDependencies": [
          464,
          1009,
          1344,
          1495,
          1505,
          1608,
          1635,
          1658
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\r\nThis implementation includes all the required and some optional functionality of the ERC721 standard\r\nMoreover, it includes approve all functionality using operator terminology\r\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r",
        "fullyImplemented": true,
        "id": 1368,
        "linearizedBaseContracts": [
          1368,
          1495,
          1658,
          1344,
          1635,
          1009,
          1608,
          464,
          1505
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "578:66:6",
              "statements": []
            },
            "documentation": null,
            "id": 1367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1362,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1357,
                    "src": "564:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1363,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1359,
                    "src": "570:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1361,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1495,
                  "src": "549:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1495_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "549:28:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1357,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "500:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "520:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:42:6"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:6"
            },
            "scope": 1368,
            "src": "487:157:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1369,
        "src": "416:231:6"
      }
    ],
    "src": "0:647:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1368
      ]
    },
    "id": 1369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1346,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1347,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1010,
        "src": "27:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1348,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1345,
        "src": "51:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matsuokadaisuke/Desktop/2019Hackathon/RightConnect/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1349,
        "nodeType": "ImportDirective",
        "scope": 1369,
        "sourceUnit": 1496,
        "src": "85:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1350,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1009,
              "src": "439:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1009",
                "typeString": "contract ERC721"
              }
            },
            "id": 1351,
            "nodeType": "InheritanceSpecifier",
            "src": "439:6:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1352,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1344,
              "src": "447:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1344",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1353,
            "nodeType": "InheritanceSpecifier",
            "src": "447:16:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1354,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1495,
              "src": "465:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1495",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1355,
            "nodeType": "InheritanceSpecifier",
            "src": "465:14:6"
          }
        ],
        "contractDependencies": [
          464,
          1009,
          1344,
          1495,
          1505,
          1608,
          1635,
          1658
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\r\nThis implementation includes all the required and some optional functionality of the ERC721 standard\r\nMoreover, it includes approve all functionality using operator terminology\r\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r",
        "fullyImplemented": true,
        "id": 1368,
        "linearizedBaseContracts": [
          1368,
          1495,
          1658,
          1344,
          1635,
          1009,
          1608,
          464,
          1505
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "578:66:6",
              "statements": []
            },
            "documentation": null,
            "id": 1367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1362,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1357,
                    "src": "564:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1363,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1359,
                    "src": "570:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1361,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1495,
                  "src": "549:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1495_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "549:28:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1357,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "500:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "520:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:42:6"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:6"
            },
            "scope": 1368,
            "src": "487:157:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1369,
        "src": "416:231:6"
      }
    ],
    "src": "0:647:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-02-17T02:53:27.619Z",
  "devdoc": {
    "details": "see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID\r The zero address indicates there is no approved address.\r There can only be one approved address per token at a given time.\r Can only be called by the token owner or an approved operator.\r",
        "params": {
          "to": "address to be approved for the given token ID\r",
          "tokenId": "uint256 ID of the token to be approved\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address\r",
        "params": {
          "owner": "address to query the balance of\r"
        },
        "return": "uint256 representing the amount owned by the passed address\r"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set\r Reverts if the token ID does not exist.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of\r"
        },
        "return": "address currently approved for the given token ID\r"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "name()": {
        "details": "Gets the token name\r",
        "return": "string representing the token name\r"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of\r"
        },
        "return": "address currently marked as the owner of the given token ID\r"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement `onERC721Received`,\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement `onERC721Received`,\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "_data": "bytes data to send along with a safe transfer check\r",
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table\r"
      },
      "symbol()": {
        "details": "Gets the token symbol\r",
        "return": "string representing the token symbol\r"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract\r Reverts if the index is greater or equal to the total number of tokens\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list\r"
        },
        "return": "uint256 token ID at the given index of the tokens list\r"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list\r",
          "owner": "address owning the tokens list to be accessed\r"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address\r"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID\r Throws if the token ID does not exist. May return an empty string.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query\r"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract\r",
        "return": "uint256 representing the total amount of tokens\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address\r Usage of this method is discouraged, use `safeTransferFrom` whenever possible\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      }
    },
    "title": "Full ERC721 Token\r This implementation includes all the required and some optional functionality of the ERC721 standard\r Moreover, it includes approve all functionality using operator terminology\r"
  },
  "userdoc": {
    "methods": {}
  }
}